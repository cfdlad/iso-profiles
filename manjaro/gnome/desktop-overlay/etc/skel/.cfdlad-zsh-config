#########################################################################################################################################################
# cfdlad-zsh-config

# For zsh-autocomplete, add its source at or near the top of your `.zshrc` file (_before_ any calls to `compdef`). [its at the top]
# For zsh-autocomplete, remove any calls to `compinit` from your `.zshrc` file.  [no calls to cominit in here]
# For zsh-autocomplete, comment out  [zstyle ':completion:*' menu select] b/c of interferance. [no calls to zstyle in here]
########################################################################################################################################################

### EXPORT
export TERM="xterm-256color"                   	# getting proper colors
export HISTORY_IGNORE="(ls|cd|pwd|exit|sudo reboot|history|cd -|cd ..)"
export EDITOR=/usr/bin/micro
export VISUAL=/usr/bin/micro
export PAGER=moar
export MOAR='--colors=16M --terminal-fg --reformat --style=gruvbox'
export MANROFFOPT='-c'							# to force manpage colors
export COLORTERM=truecolor

### Use zsh_autocomplete (mine)
source /usr/share/zsh/plugins/zsh-autocomplete/zsh-autocomplete.plugin.zsh
setopt interactive_comments						# to enable the autocomplete in the terminal

## Use zsh-autosuggestions
source /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh

### FZF path
source /usr/share/fzf/key-bindings.zsh
source /usr/share/fzf/completion.zsh

### FZF settings
#export FZF_BASE="$HOME/.fzf"
export FZF_DEFAULT_COMMAND='rg --hidden --no-ignore --files -g "!.git/"'
export FZF_CTRL_T_COMMAND=$FZF_DEFAULT_COMMAND
export FZF_DEFAULT_OPTS='--height 60% --layout=reverse --border'

### Functions 
source ~/.zfunctions

### PATH
# Not needed by me for now
if [ -d "$HOME/.bin" ] ;
  then PATH="$HOME/.bin:$PATH"
fi

if [ -d "$HOME/.local/bin" ] ;
  then PATH="$HOME/.local/bin:$PATH"
fi

if [ -d "$HOME/.emacs.d/bin" ] ;
  then PATH="$HOME/.emacs.d/bin:$PATH"
fi

if [ -d "$HOME/Applications" ] ;
  then PATH="$HOME/Applications:$PATH"
fi

if [ -d "/var/lib/flatpak/exports/bin/" ] ;
  then PATH="/var/lib/flatpak/exports/bin/:$PATH"
fi

if [ -d "$HOME/.config/emacs/bin/" ] ;
  then PATH="$HOME/.config/emacs/bin/:$PATH"
fi

### ALIASES

# vim
alias vim="nvim"

# pacman
alias pac-zst='sudo pacman -U ./*zst'			 			# offline pkgs install
alias pac-zstd='sudo pacman -U -d ./*zst'		 			# offline forced pkgs install
alias unlock='sudo rm /var/lib/pacman/db.lck'    			# remove pacman lock
alias cleanup='sudo pacman -Rns $(pacman -Qtdq)' 			# remove orphaned packages (DANGEROUS!)l'

# Changing "ls" to "eza" (see if exa can be installed in ubuntu 22.04, brew, pacstall, binary etc)
alias ll='eza -al --icons --color=always --group-directories-first' # column (all files and dirs)
alias ls='eza -a --icons --color=always --group-directories-first'  # row (all files and dirs)
alias la='eza -a --icons --color=always --group-directories-first'  # row (all files and dirs)
alias lt='eza -aT --color=always --group-directories-first' # tree listing
alias l.='eza -a | grep -E "^\."'

# Colorize grep output (good for log files)
alias grep='grep --color=auto'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'

# cheat and fzf
alias ch="cheat -l -c | awk '{print \$1}' | fzf --preview='cheat --colorize {}' --preview-window=right,75% --height 70% | xargs -I{} cheat {}"	# Preview and paste code
alias ch-path="cheat -l | fzf |  awk '{print \$1}' | xargs -I{} cheat {}"				# No preview, only path and paste code
alias ch-preview='cheat -l | fzf --preview="cheat -c {1}" --preview-window=right,80% --height 70%'		# Preview only and paste cheat file path

# tldr
alias tldr-fzf='tldr --list | fzf --preview "tldr --color always {1}" --preview-window=right,65% --height 70% | xargs -I{} tldr {}'

# for ranger, to exit or cd into the current folder
alias ranger='source ranger'

# fuz (fzf and ripgrep search script)
export FUZ_EDITOR=nvim
alias fuz='~/Applications/fuz-main/fuz --path "/home"'	# Searches text in all files in home '~/'
alias fuzp='fuz --path ./'				        		# Searches text in all files for the current directory (fuzp: p= path)
alias fuz-sort-time='fuz --sorttime'					# Searches text in all files in home '~/' modified by date
alias fuz-file-home='fuz --edit'						# Searches file names only in '/home' (Open file with vim)
alias fuz-file-path='fuz --names --path ./'				# Searches file names only in the current directory  './'
alias fuz-file-root='fuz --names --path /'				# Searches file names only in root '/'
alias fuz-file-usb='fuz -n -p /run/media/manjaro/'		# Searches file names only within any usb drive
alias fuz-text-path='fuz --path ./'				        # Searches text in all files for the current directory (same as fuzp)
alias fuz-text-usb='fuz --path /run/media/manjaro/'		# Searches text in all files within any usb drive

# ps
alias psa="ps auxf"
alias psgrep="ps aux | grep -v grep | grep -i -e VSZ -e"
alias psmem='ps auxf | sort -nr -k 4'
alias pscpu='ps auxf | sort -nr -k 3'

# git
alias addup='git add -u'
alias addall='git add .'
alias branch='git branch'
alias checkout='git checkout'
alias clone='git clone'
alias commit='git commit -m'
alias fetch='git fetch'
alias pull='git pull origin'
alias push='git push origin'
alias stat='git status'  # 'status' is protected name so using 'stat' instead
alias tag='git tag'
alias newtag='git tag -a'

# get error messages from journalctl
alias jctl="journalctl -p 3 -xb"

# gpg encryption
# verify signature for isos
alias gpg-check="gpg2 --keyserver-options auto-key-retrieve --verify"
# receive the key of a developer
alias gpg-retrieve="gpg2 --keyserver-options auto-key-retrieve --receive-keys"

# switch between shells
alias tobash="sudo chsh $USER -s /bin/bash && echo 'Now log out.'"
alias tozsh="sudo chsh $USER -s /bin/zsh && echo 'Now log out.'"
alias tofish="sudo chsh $USER -s /bin/fish && echo 'Now log out.'"

# vte fix for tillix
if [ $TILIX_ID ] || [ $VTE_VERSION ]; then
        source /etc/profile.d/vte.sh
fi

### Setting the starship prompt ###
# It is set in .zshrc file
#eval "$(starship init zsh)"
